'use client';

import { useAppDispatch } from '@shared/model';
import store from '@app/appStore';
import { setProducts } from './slice';
import { ProductType } from './types';

type Props = {
  serverSideProducts: ProductType[];
};

/**
 * üíÄüíÄüíÄ –ë–£–î–¨ –í–ù–ò–ú–ê–¢–ï–õ–ï–ù
 *
 *
 * –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—å—Å—è —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å store
 * –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø—Ä–µ-—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
 *  @@INIT Redux Store with initState: {data: [], firstRender: false}
 *
 * ‚ÄºÔ∏è–í–ù–ò–ú–ê–ù–ò–ï
 *
 * –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ NEXT JS –≤—ã–∑–æ–≤–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏,
 * —Ç–æ–µ—Å—Ç—å –†–ï–ù–î–ï–† –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –ü–û–ò–ó–û–ô–î–Å–¢ –û–î–ò–ù –†–ê–ó,
 * –•–£–ö–ò useEffect(() => {}) –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ù–ï –ë–£–î–£–¢!!!
 * @@AFTER ALL fun() calls, Redux Store with initState: {data: [{...}, ...], firstRender: true}
 *
 * –ù–û –ù–ê –ö–õ–ò–ï–ù–¢ –û–¢–ü–†–ê–í–ò–¢–¨–°–Ø –¢–û–õ–¨–ö–û HTML-—Ñ–∞–π–ª (HTML DOM –∏ –°–ï–†–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ê–Ø –î–ê–¢–ê –≤–Ω—É—Ç—Ä–∏ <script/> tags )
 * @see src/app/page.tsx
 *
 *
 * <html>
 *    //–≤—Å—è —Ä–∞–∑–º–µ—Ç–∫–∞ –≤–º–µ—Å—Ç–µ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
 *    <div>
 *      <div> ProductCard <div>
 *      <div> ProductCard <div>
 *       ...
 *    </div>
 *      // –î–∞–Ω–Ω—ã–µ –∫–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º HTML-—Ñ–∞–π–ª–µ –ø–æ—Å–ª–µ –ø—Ä–µ-—Ä–µ–Ω–¥–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 *      // –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 *      // –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –∏–ª–∏ —Ä–µ—Å—É—Ä—Å–∞.
 *    <script>
 *      // –°–µ—Ä–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞—è –¥–∞—Ç–∞ –ø—Ä–æ–ø—Å–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ serverSideProducts
 *      self.__next_f.push({ serverSideProducts: [{...}, ...]})
 *    </script>
 *    <script>
 *      self.__next_f.push(...)
 *    </script>
 *    <script>
 *      self.__next_f.push(...)
 *    </script>
 *      ...
 * </html>
 *
 *  –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª HTML-—Ñ–∞–π–ª–µ –ë–ï–ó JavaScript, Redux Store, React –∏ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
 *  –í –∫–ª–∏–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞—é—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Ñ–∞–π–ª—ã .js –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è React, React DOM, Redux Store –∏ —Ç–¥
 *  –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ .js —Ñ–∞–π–ª–æ–≤ React –Ω–∞—á–∏–Ω–∞–µ—Ç Hydration:
 *    1. @@INIT Redux Store with initState: {data: [], firstRender: false}
 *    2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è React DOM c browser DOM
 *    3. Attach React components into a server-rendered browser DOM nodes
 *    4. Setting productg into store.products: {data: [{...}, ...], firstRender: true}
 *
 *  TODO finish this doc PreloadProducts
 *
 *
 */

export function PreloadProducts({ serverSideProducts }: Props) {
  const dispatch = useAppDispatch();
  /**
   * –í–æ –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤–æ –≤—Ä–µ–º—è –≥–∏–¥—Ä–∞—Ü–∏–∏ –∑–∞–Ω—á–µ–Ω–∏–µ firstRender: false
   * –ü–æ—Å–ª–µ –≤–æ –≤—Ä–µ–º—è –≥–∏–¥—Ä–∞—Ü–∏–∏ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞
   */
  if (!store.getState().product.firstRender) {
    dispatch(setProducts(serverSideProducts));
  }
  console.log(
    'PreloadProducts call',
    serverSideProducts,
    'State',
    store.getState().product.firstRender
  );

  return null;
}
